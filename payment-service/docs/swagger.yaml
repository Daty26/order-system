basePath: /
definitions:
  api.PaymentRequest:
    properties:
      amount:
        type: number
      orderId:
        type: integer
    type: object
  model.Payment:
    properties:
      amount:
        type: number
      id:
        type: integer
      orderID:
        type: integer
      status:
        $ref: '#/definitions/model.PaymentStatus'
    type: object
  model.PaymentStatus:
    enum:
    - PENDING
    - COMPLETED
    - FAILED
    type: string
    x-enum-varnames:
    - PaymentPending
    - PaymentCompleted
    - PaymentFailed
host: localhost:8080
info:
  contact: {}
  description: Order service for the order system
paths:
  /payments:
    get:
      description: Retrieve a list of all processed payments
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Payment'
            type: array
        "400":
          description: Couldn't fetch payments
          schema:
            type: string
      summary: Get all payments
    post:
      consumes:
      - application/json
      description: Process a new payment for a given order
      parameters:
      - description: Payment request
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/api.PaymentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Payment'
        "400":
          description: Invalid request
          schema:
            type: string
      summary: Create a new payment
  /payments/{id}:
    delete:
      description: Delete payment with specified ID
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid id type
          schema:
            type: string
        "404":
          description: Payment not found
          schema:
            type: string
        "500":
          description: Couldn't delete payment
          schema:
            type: string
      summary: Delete a payment
    get:
      description: Retrieve a single payment by its ID
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Payment'
        "400":
          description: Invalid id type
          schema:
            type: string
        "404":
          description: Payment not found
          schema:
            type: string
        "500":
          description: Could not fetch payment
          schema:
            type: string
      summary: Get payment by ID
    put:
      consumes:
      - application/json
      description: Update status and amount of a payment by ID
      parameters:
      - description: Payment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Payment'
        "400":
          description: Invalid id or request body
          schema:
            type: string
        "404":
          description: Payment not found
          schema:
            type: string
        "500":
          description: Couldn't update payment
          schema:
            type: string
      summary: Update an existing payment
swagger: "2.0"
